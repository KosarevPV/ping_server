version: '3.1'


services:
  db:
    image: postgres:15.4
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: db_user
      POSTGRES_PASSWORD: response1
      POSTGRES_DB: response
  backend:
    build: ./ping_server
    volumes:
      - static_volume:/home/app/web/staticfiles
    expose:
      - 8080
    env_file:
      - ./.env.dev
    command: bash -c "
      ./wait-for-postgres.sh db
      && python manage.py migrate ping zero
      && python manage.py migrate
      && python manage.py add_data
      && python manage.py collectstatic --no-input --clear
      && gunicorn ping_server.wsgi -b 0.0.0.0:8080"
    depends_on:
      - db
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
    ports:
      - "8000:80"
    depends_on:
      - backend
  frontend:
    build: ./frontend
    ports:
      - "80:80"
    depends_on:
      - nginx
  redis:
    image: redis:alpine
    ports:
    - '6379:6379'
  celery:
    restart: always
    build:
      context: ./ping_server
    command: celery -A ping_server worker -l info
    volumes:
      - .:/ping_server
    depends_on:
      - db
      - redis
      - backend
  celery-beat:
    build: ./ping_server
    command: celery -A ping_server beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/ping_server
    depends_on:
      - db
      - redis
      - backend
      - celery
volumes:
  postgres_data:
  static_volume: